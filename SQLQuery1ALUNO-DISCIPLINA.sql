CREATE DATABASE ALUNODISCI

USE ALUNODISCI

CREATE TABLE ALUNO(
RA		INT				NOT NULL,
NOME	VARCHAR(100)	NOT NULL,
IDADE	INT				NOT NULL
PRIMARY KEY(RA) 
)
CREATE TABLE DISCIPLINA(
CODIGO				INT				NOT NULL,
NOME				VARCHAR(80)		NOT NULL,
CARGA_HORARIA		INT				NOT NULL
PRIMARY KEY (CODIGO)
)
CREATE TABLE ALUNO_DISCIPLINA(
ALUNORA				INT	NOT NULL,
DISCIPLINACODIGO	INT	NOT NULL
PRIMARY KEY (ALUNORA,DISCIPLINACODIGO)
FOREIGN KEY (ALUNORA)
			REFERENCES ALUNO(RA),
FOREIGN KEY (DISCIPLINACODIGO)
			REFERENCES DISCIPLINA(CODIGO)
)
CREATE TABLE CURSO(
CODIGO	INT				NOT NULL,
NOME	VARCHAR(50)		NOT NULL,
AREA	INT				NOT NULL
PRIMARY KEY (CODIGO)
)
ALTER TABLE CURSO
ALTER COLUMN AREA	VARCHAR(100) NOT NULL
CREATE TABLE CURSO_DISCIPLINA(
CURSOCODIGO			INT	NOT NULL,
DISCIPLINACODIGO	INT NOT NULL
PRIMARY KEY (CURSOCODIGO,DISCIPLINACODIGO)
FOREIGN KEY (CURSOCODIGO)
			REFERENCES CURSO(CODIGO),
FOREIGN KEY (DISCIPLINACODIGO)
			REFERENCES DISCIPLINA(CODIGO)
)
CREATE TABLE TITULACAO(
CODIGO		INT				NOT NULL,
TITULO		VARCHAR(40)		NOT NULL
PRIMARY KEY (CODIGO)
)
CREATE TABLE PROFESSOR(
REGISTRO	INT				NOT NULL,
NOME		VARCHAR(100)	NOT NULL,
TITULACAO	INT				NOT NULL
PRIMARY KEY (REGISTRO)
FOREIGN KEY (TITULACAO)
			REFERENCES TITULACAO(CODIGO)
)
CREATE TABLE DISCIPLINA_PROFESSOR(
DISCIPLINACODIGO		INT	NOT NULL,
PROFESSORREGISTRO		INT	NOT NULL
PRIMARY KEY(DISCIPLINACODIGO,PROFESSORREGISTRO)
FOREIGN KEY (DISCIPLINACODIGO)
			REFERENCES DISCIPLINA(CODIGO),
FOREIGN KEY (PROFESSORREGISTRO)
			REFERENCES PROFESSOR(REGISTRO)
)
ALTER TABLE ALUNO
ADD CONSTRAINT CI CHECK (IDADE > 0)
--SP_HELP 'ALUNO'

ALTER TABLE DISCIPLINA
ADD CONSTRAINT DI CHECK (CARGA_HORARIA > 32)

INSERT INTO ALUNO
VALUES
(3416,'DIEGO PIOVESAN DE RAMOS',18),
(3423,'LEONARDO MAGALHÃES DA ROSA',17),
(3434,'LUIZA CRISTINA DE LIMA MARTINELI',20),
(3440,'IVO ANDRÉ FIGUEIRA DA SILVA',25),
(3443,'BRUNA LUISA SIMIONI',37),
(3448,'THAÍS NICOLINI DE MELLO',17),
(3457,'LÚCIO DANIEL TÂMARA ALVES',29),
(3459,'LEONARDO RODRIGUES',25),
(3465,'ÉDERSON RAFAEL VIEIRA',19),
(3466,'DAIANA ZANROSSO DE OLIVEIRA',21),
(3467,'DANIELA MAURER',23),
(3470,'ALEX SALVADORI PALUDO',42),
(3471,'VINÍCIUS SCHVARTZ',19),
(3472,'MARIANA CHIES ZAMPIERI',18),
(3482,'EDUARDO CAINAN GAVSKI',19),
(3483,'REDNALDO ORTIZ DONEDA',20),
(3499,'MAYELEN ZAMPIERON',22)

INSERT INTO DISCIPLINA
VALUES
(1,'Laboratório de Banco de Dados',	80),
(2,'Laboratório de Engenharia de Software',	80),
(3,'Programação Linear e Aplicações',	80),
(4,'Redes de Computadores',	80),
(5,'Segurança da informação',	40),
(6,'Teste de Software',	80),
(7,'Custos e Tarifas Logísticas',	80),
(8,'Gestão de Estoques',	40),
(9,'Fundamentos de Marketing',	40),
(10,'Métodos Quantitativos de Gestão',	80),
(11,'Gestão do Tráfego Urbano',	80),
(12,'Sistemas de Movimentação e Transporte',	40)


INSERT INTO TITULACAO
VALUES
(1,'Especialista'),
(2,'Mestre'),
(3,'Doutor')



INSERT INTO PROFESSOR
VALUES
(1111,'Leandro',	2),
(1112,'Antonio',	2),
(1113,'Alexandre',	3),
(1114,'Wellington',	2),
(1115,'Luciano',	1),
(1116,'Edson',	2),
(1117,'Ana',	2),
(1118,'Alfredo',	1),
(1119,'Celio',	2),
(1120,'Dewar',	3),
(1121,'Julio',	1)

INSERT INTO CURSO
VALUES
(1,'ADS','Ciências da Computação'),
(2,'Logística','Engenharia Civil')



INSERT INTO ALUNO_DISCIPLINA(DISCIPLINACODIGO,ALUNORA)
VALUES
(1,	3416),
(4,	3416),
(1,	3423),
(2,	3423),
(5,	3423),
(6,	3423),
(2,	3434),
(5,	3434),
(6,	3434),
(1,	3440),
(5,	3443),
(6,	3443),
(4,	3448),
(5,	3448),
(6,	3448),
(2,	3457),
(4,	3457),
(5,	3457),
(6,	3457),
(1,	3459),
(6,	3459),
(7,	3465),
(11,3465),
(8,	3466),
(11,3466),
(8,	3467),
(12,3467),
(8,	3470),
(9,	3470),
(11,3470),
(12,3470),
(7,	3471),
(7,	3472),
(12,3472),
(9,	3482),
(11,3482),
(8,	3483),
(11,3483),
(12,3483),
(8,	3499)

INSERT INTO DISCIPLINA_PROFESSOR
VALUES
(1,	1111),
(2,	1112),
(3,	1113),
(4,	1114),
(5,	1115),
(6,	1116),
(7,	1117),
(8,	1118),
(9,	1117),
(10,1119),
(11,1120),
(12,1121)



INSERT INTO CURSO_DISCIPLINA(DISCIPLINACODIGO,CURSOCODIGO)
VALUES
(1,	1),
(2,	1),
(3,	1),
(4,	1),
(5,	1),
(6,	1),
(7,	2),
(8,	2),
(9,	2),
(10,2),
(11,2),
(12,2)

--01
--Como fazer as listas de chamadas, com RA e nome por disciplina ?								
SELECT AL.RA,AL.NOME,DIS.NOME FROM ALUNO AL INNER JOIN ALUNO_DISCIPLINA ALDIS ON
AL.RA = ALDIS.ALUNORA INNER JOIN DISCIPLINA DIS ON DIS.CODIGO = ALDIS.DISCIPLINACODIGO
ORDER BY DIS.CODIGO

--02
--Fazer uma pesquisa que liste o nome das disciplinas e o nome dos professores que as ministram
SELECT DIS.NOME,PRO.NOME FROM PROFESSOR PRO INNER JOIN DISCIPLINA_PROFESSOR DISPRO ON
PRO.REGISTRO = DISPRO.PROFESSORREGISTRO INNER JOIN DISCIPLINA DIS ON
DIS.CODIGO = DISPRO.DISCIPLINACODIGO
--03
--Fazer uma pesquisa que , dado o nome de uma disciplina, retorne o nome do curso
SELECT CUR.NOME AS CURSO ,DIS.NOME AS DISCIPLINA FROM DISCIPLINA DIS INNER JOIN CURSO_DISCIPLINA CURDIS ON
DIS.CODIGO = CURDIS.DISCIPLINACODIGO INNER JOIN CURSO CUR ON
CUR.CODIGO = CURDIS.CURSOCODIGO 
--04
--Fazer uma pesquisa que , dado o nome de uma disciplina, retorne sua área
SELECT DIS.NOME,CUR.AREA FROM DISCIPLINA DIS INNER JOIN CURSO_DISCIPLINA CURDIS ON
DIS.CODIGO = CURDIS.DISCIPLINACODIGO INNER JOIN CURSO CUR ON
CUR.CODIGO = CURDIS.CURSOCODIGO 
--05
--Fazer uma pesquisa que , dado o nome de uma disciplina, retorne o título do professor que a ministra
SELECT DIS.NOME,TIT.TITULO FROM PROFESSOR PRO INNER JOIN DISCIPLINA_PROFESSOR DISPRO ON
PRO.REGISTRO = DISPRO.PROFESSORREGISTRO INNER JOIN DISCIPLINA DIS ON
DIS.CODIGO = DISPRO.DISCIPLINACODIGO INNER JOIN TITULACAO TIT ON TIT.CODIGO = PRO.TITULACAO
--06
--Fazer uma pesquisa que retorne o nome da disciplina e quantos alunos estão matriculados em cada uma delas
SELECT DIS.NOME, COUNT(aldis.DISCIPLINACODIGO) AS QUANTIDADE FROM ALUNO AL INNER JOIN ALUNO_DISCIPLINA ALDIS ON
AL.RA = ALDIS.ALUNORA INNER JOIN DISCIPLINA DIS ON DIS.CODIGO = ALDIS.DISCIPLINACODIGO
GROUP BY DIS.NOME, ALDIS.DISCIPLINACODIGO
--07
--Fazer uma pesquisa que, dado o nome de uma disciplina, retorne o nome do professor.  Só deve retornar de disciplinas que tenham, no mínimo, 5 alunos matriculados
SELECT DIS.NOME,PRO.NOME FROM DISCIPLINA DIS INNER JOIN DISCIPLINA_PROFESSOR DISPRO ON
DIS.CODIGO = DISPRO.DISCIPLINACODIGO INNER JOIN PROFESSOR PRO ON 
PRO.REGISTRO = DISPRO.PROFESSORREGISTRO
WHERE DIS.NOME IN (
SELECT DIS.NOME FROM ALUNO AL INNER JOIN ALUNO_DISCIPLINA ALDIS ON
AL.RA = ALDIS.ALUNORA INNER JOIN DISCIPLINA DIS ON DIS.CODIGO = ALDIS.DISCIPLINACODIGO
GROUP BY DIS.NOME
HAVING COUNT(ALDIS.DISCIPLINACODIGO) >= 5
)
--08
--Fazer uma pesquisa que retorne o nome do curso e a quatidade de professores cadastrados que ministram aula nele. A coluna de ve se chamar quantidade
SELECT CUR.NOME,COUNT(PRO.REGISTRO) AS QUANTIDADE FROM PROFESSOR PRO INNER JOIN DISCIPLINA_PROFESSOR DISPRO ON
PRO.REGISTRO = DISPRO.PROFESSORREGISTRO INNER JOIN DISCIPLINA DIS ON 
DIS.CODIGO = DISPRO.DISCIPLINACODIGO INNER JOIN CURSO_DISCIPLINA CURDIS ON
CURDIS.DISCIPLINACODIGO = DIS.CODIGO INNER JOIN CURSO CUR ON CUR.CODIGO = CURDIS.CURSOCODIGO
GROUP BY CUR.NOME